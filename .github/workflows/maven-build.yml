#  Helll This workflow will build a Java project with Maven, and cache/restore any dependencies to improve the workflow execution time
# For more information see: https://help.github.com/actions/language-and-framework-guides/building-and-testing-java-with-maven

name: Java CI with Maven

on:
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]

jobs:
  build:

    runs-on: ubuntu-latest
    strategy:
      matrix:
        java: [ '17' ]

    steps:
      - uses: actions/checkout@v4
      - name: Set up JDK ${{matrix.java}}
        uses: actions/setup-java@v4
        with:
          java-version: ${{matrix.java}}
          distribution: 'adopt'
          cache: maven
      - name: Build with Maven Wrapper
        run: ./mvnw -B package
      - name: Login to DockerHub
        uses: docker/login-action@v1 
        with:
          username: ${{ secrets.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_TOKEN }}
 
      - name: Build and push Docker image
        uses: docker/build-push-action@v2
        with:
          context: .
          push: true
          tags: hexadevops/agility:latest  
      - name: Install Argo CD CLI
        run: |
          curl -sSL -o /usr/local/bin/argocd https://github.com/argoproj/argo-cd/releases/latest/download/argocd-linux-amd64
          chmod +x /usr/local/bin/argocd

      - name: Deploy to Argo CD
        run: |
          #argocd login ${{ secrets.ARGOCD_SERVER }} --username ${{ secrets.ARGOCD_USERNAME }} --password ${{ secrets.ARGOCD_PASSWORD }}
          argocd login ${{ secrets.ARGOCD_SERVER }} --username ${{ secrets.ARGOCD_USERNAME }} --password ${{ secrets.ARGOCD_PASSWORD }} --insecure --grpc-web
          #argocd app delete argo-petclinic
          argocd app create tester-environment --repo https://github.com/tensai-agility/kub-spring-petclinic.git --path . --dest-server https://kubernetes.default.svc --dest-namespace argo-petclinic
          #argocd app create java-petclinic --repo https://github.com/argoproj/argocd-example-apps.git --path guestbook --dest-server https://kubernetes.default.svc --dest-namespace argo-petclinic
          #argocd app create blue-green- --repo https://github.com/tensai-agility/argocd-example-apps.git --path blue-green --dest-namespace default --dest-server https://kubernetes.default.svc --helm-set replicaCount=2
          argocd app create --name blue-green --repo https://github.com/tensai-agility/argocd-example-apps.git --dest-server https://kubernetes.default.svc --dest-namespace default --path blue-green && argocd app sync blue-green
          
          
          #argocd app sync java-petclinic    
